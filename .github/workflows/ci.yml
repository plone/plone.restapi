name: Plone RESTAPI CI
on: [push]
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.8, 3.7, 3.6, 2.7]
        plone-version: [5.2, 5.1, 4.3]
        exclude:
          - python-version: 3.6
            plone-version: 4.3
          - python-version: 3.6
            plone-version: 5.0
          - python-version: 3.6
            plone-version: 5.1
          - python-version: 3.7
            plone-version: 4.3
          - python-version: 3.7
            plone-version: 5.0
          - python-version: 3.7
            plone-version: 5.1
          - python-version: 3.8
            plone-version: 4.3
          - python-version: 3.8
            plone-version: 5.0
          - python-version: 3.8
            plone-version: 5.1

    steps:
      # git checkout
      - uses: actions/checkout@v2

      # python setup
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      # python cache
      - uses: actions/cache@v1
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # python install
      - run: pip install virtualenv
      - run: pip install wheel
      - name: pip install
        run: pip install -r requirements.txt
      - name: choose Plone version
        run: sed -ie "s#plone-x.x.x.cfg#plone-${{ matrix.plone-version }}.x.cfg#" ci.cfg

      # buildout
      - name: buildout
        run: buildout -t 10 -c ci.cfg
        env:
          CI: true

      # black
      - name: black
        run: if [ "${{ matrix.plone-version }}" == "5.2" ] && [ ${{ matrix.python-version }} == '3.7' ]; then pip install black && black src/ --check --diff; fi

      # code analysis
      - name: black
        run: bin/code-analysis

      # build sphinx
      - name: sphinx
        run: if [ "${{ matrix.plone-version }}" == "5.2" ] && [ ${{ matrix.python-version }} == '3.7' ]; then bin/sphinxbuilder; fi

      # test
      - name: test
        run: bin/test

      # test no uncommited changes
      - name: test no uncommited changes
        run: bin/test-no-uncommitted-doc-changes
        env:
          PYTHON_VERSION: ${{ matrix.python-version }}
          PLONE_VERSION: ${{ matrix.plone-version }}

      # test sphinx warnings
      - name: sphinx
        run: if [ "${{ matrix.plone-version }}" == "5.2" ] && [ ${{ matrix.python-version }} == '3.7' ]; then bin/test-no-sphinx-warnings; fi
